package CSS.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenAspectBase;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.text.rt.TextGenDescriptor;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;
import jetbrains.mps.text.rt.TextGenModelOutline;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class TextGenAspectDescriptor extends TextGenAspectBase {
  private final long[] myId2Index;
  public TextGenAspectDescriptor() {
    myId2Index = new long[3];
    myId2Index[0] = 0x4286f33e04290f94L;
    myId2Index[1] = 0x4286f33e04290f97L;
    myId2Index[2] = 0x4286f33e04291140L;
  }
  @Nullable
  @Override
  public TextGenDescriptor getDescriptor(@NotNull SConceptId id) {
    final int index = Arrays.binarySearch(myId2Index, id.getIdValue());
    switch (index) {
      case 0:
        return new CSS_TextGen();
      case 1:
        return new Selector_TextGen();
      case 2:
        return new Attribute_TextGen();
      default:
        return null;
    }
  }

  @Override
  public void breakdownToUnits(@NotNull TextGenModelOutline outline) {
    for (SNode root : outline.getModel().getRootNodes()) {
      if (root.getConcept().equals(MetaAdapterFactory.getConcept(0xe30462c3244a471fL, 0x85b50e12ef920590L, 0x4286f33e04290f94L, "CSS.structure.CSS"))) {
        String fname = getFileName_CSS(root);
        String ext = getFileExtension_CSS(root);
        outline.registerTextUnit((ext == null ? fname : (fname + '.' + ext)), root);
        continue;
      }
    }
  }
  private static String getFileName_CSS(SNode node) {
    return SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xe30462c3244a471fL, 0x85b50e12ef920590L, 0x4286f33e04290f94L, 0x4286f33e042991bfL, "fileName"));
  }
  private static String getFileExtension_CSS(SNode node) {
    return null;
  }
}
