package FormularCreator.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenAspectBase;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.text.rt.TextGenDescriptor;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;
import jetbrains.mps.text.rt.TextGenModelOutline;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class TextGenAspectDescriptor extends TextGenAspectBase {
  private final long[] myId2Index;
  public TextGenAspectDescriptor() {
    myId2Index = new long[12];
    myId2Index[0] = 0x21673afa625a9a6L;
    myId2Index[1] = 0x29a3324f4c6b9239L;
    myId2Index[2] = 0x29a3324f4c6b924aL;
    myId2Index[3] = 0x4286f33e0428be36L;
    myId2Index[4] = 0x4286f33e042bfc37L;
    myId2Index[5] = 0x4286f33e042bfc38L;
    myId2Index[6] = 0x4286f33e042f4d2dL;
    myId2Index[7] = 0x4286f33e04305896L;
    myId2Index[8] = 0x4286f33e0430cbf1L;
    myId2Index[9] = 0x5cfaed392144beccL;
    myId2Index[10] = 0x69ebf73505e393d6L;
    myId2Index[11] = 0x6c446b1f9ef2a1f8L;
  }
  @Nullable
  @Override
  public TextGenDescriptor getDescriptor(@NotNull SConceptId id) {
    final int index = Arrays.binarySearch(myId2Index, id.getIdValue());
    switch (index) {
      case 0:
        return new Input_TextGen();
      case 1:
        return new TextArea_TextGen();
      case 2:
        return new Label_TextGen();
      case 3:
        return new Link_TextGen();
      case 4:
        return new DropdownButton_TextGen();
      case 5:
        return new RadioButton_TextGen();
      case 6:
        return new DropdownElement_TextGen();
      case 7:
        return new Text_TextGen();
      case 8:
        return new RadioElement_TextGen();
      case 9:
        return new Button_TextGen();
      case 10:
        return new LineBreak_TextGen();
      case 11:
        return new Form_TextGen();
      default:
        return null;
    }
  }

  @Override
  public void breakdownToUnits(@NotNull TextGenModelOutline outline) {
    for (SNode root : outline.getModel().getRootNodes()) {
      if (root.getConcept().equals(MetaAdapterFactory.getConcept(0x2b1b62680e374cddL, 0x974d919e2a59d10fL, 0x6c446b1f9ef2a1f8L, "FormularCreator.structure.Form"))) {
        String fname = getFileName_Form(root);
        String ext = getFileExtension_Form(root);
        outline.registerTextUnit((ext == null ? fname : (fname + '.' + ext)), root);
        continue;
      }
    }
  }
  private static String getFileName_Form(SNode node) {
    return SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0x2b1b62680e374cddL, 0x974d919e2a59d10fL, 0x6c446b1f9ef2a1f8L, 0x4286f33e042a15ebL, "formName"));
  }
  private static String getFileExtension_Form(SNode node) {
    return null;
  }
}
