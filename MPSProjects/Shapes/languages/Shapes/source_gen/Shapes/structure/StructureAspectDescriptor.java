package Shapes.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  /*package*/ final ConceptDescriptor myConceptCanvas = new ConceptDescriptorBuilder("Shapes.structure.Canvas", MetaIdFactory.conceptId(0xaad3913e39ff4395L, 0xb433d37bdde7e6acL, 0x22b1af4dfbafa24eL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.execution.util.structure.IMainClass").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L), MetaIdFactory.conceptId(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L)).childDescriptors(new ConceptDescriptorBuilder.Link(2499972017637270097L, "shapes", MetaIdFactory.conceptId(0xaad3913e39ff4395L, 0xb433d37bdde7e6acL, 0x22b1af4dfbafa1d9L), true, true, false)).children(new String[]{"shapes"}, new boolean[]{true}).alias("leinwand", "").create();
  /*package*/ final ConceptDescriptor myConceptCircle = new ConceptDescriptorBuilder("Shapes.structure.Circle", MetaIdFactory.conceptId(0xaad3913e39ff4395L, 0xb433d37bdde7e6acL, 0x22b1af4dfbafa20aL)).super_("Shapes.structure.Shape").super_(MetaIdFactory.conceptId(0xaad3913e39ff4395L, 0xb433d37bdde7e6acL, 0x22b1af4dfbafa1d9L)).parents("Shapes.structure.Shape").parentIds(MetaIdFactory.conceptId(0xaad3913e39ff4395L, 0xb433d37bdde7e6acL, 0x22b1af4dfbafa1d9L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(2499972017637270076L, "x"), new ConceptDescriptorBuilder.Prop(2499972017637270078L, "y"), new ConceptDescriptorBuilder.Prop(2499972017637270081L, "radius")).properties("x", "y", "radius").alias("kreis", "").create();
  /*package*/ final ConceptDescriptor myConceptColorReference = new ConceptDescriptorBuilder("Shapes.structure.ColorReference", MetaIdFactory.conceptId(0xaad3913e39ff4395L, 0xb433d37bdde7e6acL, 0x6576aa16ce466f80L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(5819430965453353323L, "color", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93c84351fL), false)).references("color").create();
  /*package*/ final ConceptDescriptor myConceptShape = new ConceptDescriptorBuilder("Shapes.structure.Shape", MetaIdFactory.conceptId(0xaad3913e39ff4395L, 0xb433d37bdde7e6acL, 0x22b1af4dfbafa1d9L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(7311218060009375996L, "color", MetaIdFactory.conceptId(0xaad3913e39ff4395L, 0xb433d37bdde7e6acL, 0x6576aa16ce466f80L), false, false, false)).children(new String[]{"color"}, new boolean[]{false}).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptSquare = new ConceptDescriptorBuilder("Shapes.structure.Square", MetaIdFactory.conceptId(0xaad3913e39ff4395L, 0xb433d37bdde7e6acL, 0x22b1af4dfbafa20bL)).super_("Shapes.structure.Shape").super_(MetaIdFactory.conceptId(0xaad3913e39ff4395L, 0xb433d37bdde7e6acL, 0x22b1af4dfbafa1d9L)).parents("Shapes.structure.Shape").parentIds(MetaIdFactory.conceptId(0xaad3913e39ff4395L, 0xb433d37bdde7e6acL, 0x22b1af4dfbafa1d9L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(2499972017637270085L, "upperLeftX"), new ConceptDescriptorBuilder.Prop(2499972017637270087L, "upperLeftY"), new ConceptDescriptorBuilder.Prop(2499972017637270090L, "size")).properties("upperLeftX", "upperLeftY", "size").alias("Viereck", "").create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCanvas, myConceptCircle, myConceptColorReference, myConceptShape, myConceptSquare);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0j, conceptFqName)) {
      case 0:
        return myConceptCanvas;
      case 1:
        return myConceptCircle;
      case 2:
        return myConceptColorReference;
      case 3:
        return myConceptShape;
      case 4:
        return myConceptSquare;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0j = new String[]{"Shapes.structure.Canvas", "Shapes.structure.Circle", "Shapes.structure.ColorReference", "Shapes.structure.Shape", "Shapes.structure.Square"};
}
