package Shapes.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = ((SAbstractConcept) concept);
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0xaad3913e39ff4395L, 0xb433d37bdde7e6acL, 0x22b1af4dfbafa24eL, "Shapes.structure.Canvas"))) {
        return Collections.<ConceptEditor>singletonList(new Canvas_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0xaad3913e39ff4395L, 0xb433d37bdde7e6acL, 0x22b1af4dfbafa20aL, "Shapes.structure.Circle"))) {
        return Collections.<ConceptEditor>singletonList(new Circle_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0xaad3913e39ff4395L, 0xb433d37bdde7e6acL, 0x6576aa16ce466f80L, "Shapes.structure.ColorReference"))) {
        return Collections.<ConceptEditor>singletonList(new ColorReference_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0xaad3913e39ff4395L, 0xb433d37bdde7e6acL, 0x22b1af4dfbafa20bL, "Shapes.structure.Square"))) {
        return Collections.<ConceptEditor>singletonList(new Square_Editor());
      }
    }
    return Collections.<ConceptEditor>emptyList();
  }

  public Collection<ConceptEditorComponent> getDeclaredEditorComponents(SAbstractConcept concept, String editorComponentId) {
    {
      SAbstractConcept cncpt = ((SAbstractConcept) concept);
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0xaad3913e39ff4395L, 0xb433d37bdde7e6acL, 0x22b1af4dfbafa1d9L, "Shapes.structure.Shape"))) {
        if ("Shapes.editor.ShapeColor".equals(editorComponentId)) {
          return Collections.<ConceptEditorComponent>singletonList(new ShapeColor());
        }
      }
    }
    return Collections.<ConceptEditorComponent>emptyList();
  }


}
